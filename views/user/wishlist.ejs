<%- include("../partials/homeHeader") %>
<%- include("../partials/mainHeader") %>
<style>
.card {
    border: 1px solid #ddd; /* Light gray border */
    margin: 0; /* Remove any default margin */
    width: 300px;
}

.card-body {
    padding: 0; /* Remove padding around the card body */
}

.card img {
    border-radius: 5px; /* Rounded corners for images */
}

.btn-dark {
    background-color: black; /* Bootstrap dark button */
    color: white; /* White text color */
    width: 100%; /* Make the button full width */
    margin-top: 10px; /* Space between the price and button */
}


</style>
<div class="container">
    <h2 class="my-4">My Wishlist <span id="wishlistCount">(1 item)</span></h2>
    
    <div class="row mb-2 d-flex">
        <% wishlist.forEach((item, index) => { %>
        <div class="col-md-3 mb-4 d-flex"> <!-- Use d-flex to make all cards same height -->
            <div class="card border shadow-sm rounded d-flex flex-column"> <!-- Make card a flex container -->
                <div class="card-body text-center p-0 d-flex flex-column justify-content-between"> <!-- Flex inside the card -->
                    <!-- Product Image -->
                    <img src="/public/product_img/<%= item.productId.image.image1 %>" alt="Product Image" class="img-fluid" style="height: 250px; object-fit: cover; border-radius: 5px; width: 100%;">
                    <div class="card-content mt-2">
                        <h5 class="card-title"><%= item.product_name %></h5>
                        <p class="card-text">Price: â‚¹<span id="itemPrice" class="text-success"><%= item.price %></span></p>
                    </div>
                    <button class="btn btn-dark mt-auto" onclick="addToCart('<%= item.productId._id %>')">ADD TO BAG</button> <!-- Ensure button sticks at the bottom -->
                </div>
            </div>
        </div>
        <% }); %>
    </div>
    
</div>


<script>
async function addToCart(productId) {
   let response=await fetch(`/cart/${productId}`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ quantity:1 })
    })
    let res=await response.json()
    if(res.success)
    {
            Swal.fire({
                title: 'Success!',
                text: 'The item has been added to your cart and removed from the wishlist.',
                icon: 'success',
                confirmButtonText: 'OK',
                position: 'top',
                toast: true,
                showConfirmButton: false,
                timer: 2000,
                timerProgressBar: true
            }).then(()=>{
                window.location.reload()
            })
        } else if(res.stock==true) {
            Swal.fire({
                title: 'Out of Stock!',
                text: 'The item you selected is currently out of stock.',
                icon: 'warning',
                confirmButtonText: 'OK',
                position: 'top',
                toast: true,
                showConfirmButton: false,
                timer: 2000,
                timerProgressBar: true
            });
        }else{
            Swal.fire({
                title: 'Warning!',
                text: 'Something went wrong.',
                icon: 'warning',
                confirmButtonText: 'OK',
                position: 'top',
                toast: true,
                showConfirmButton: false,
                timer: 2000,
                timerProgressBar: true
            });
        }
    
}

async function deleteWhistlist(productId) {
    

let response= await fetch(`/wishlist-delete/${productId}`,
       {
         method:"POST",
         headers:{"Content-Type":"application/json"},
         body:JSON.stringify({productId})
       }
    )

    if(response.ok)
    {
        const result = await response.json();
            Swal.fire({
                title: 'Success!',
                text: 'The item has been Deleted from your Whistlist.',
                icon: 'success',
                confirmButtonText: 'OK',
                position: 'top',
                toast: true,
                showConfirmButton: false,
                timer: 2000,
                timerProgressBar: true
            });
    
}
}

</script>


<%- include("../partials/homeFooter") %>