<% order.products.forEach((product) => { %>
  <div class="box-shadow col-lg-12 d-flex container p-0 my-4">
    <div class="row align-items-center">
      <div class="col-lg-4 p-0">
        <img class="img" src="/public/product_img/<%= product.image %>" alt="" style="height: 400px;width: 950px;">
      </div>
      <div class="col-lg-8">
        <h5 class="mt-3 text-center font-weight-bold mb-5" style="color: black;"><%= product.name %></h5>
        <div class="d-flex justify-content-between font-weight-bold my-4">
          <div>Amount</div>
          <div>Quantity</div>
          <div>Total</div>
          <div>Order Status</div>
        </div>
        <div class="d-flex justify-content-between font-weight-bold">
          <div>
            <span class="mr-2">₹<%= product.price %></span>
            <span class="text text-danger" style="text-decoration: line-through;">₹<%= product.productId.price %></span>
          </div>
          <div><%= product.quantity %></div>
          <div>₹<%= product.price %></div>
          <div class="badge 
            <% if (product.status === 'Delivered') { %> 
            badge-success 
            <% } else if (product.status === 'Cancelled') { %> 
            badge-danger 
            <% } else if (product.status === 'Pending') { %> 
            badge-warning
            <% } else { %> 
            badge-primary 
            <% } %>">
            <%= product.status %>
          </div>
        </div>
        <hr>
        <div class="font-weight-bold">
          <div class="mt-3 mb-2 ">paymentStatus: 
            <span class="badge ml-3
              <% if (product.paymentStatus === 'Success') { %> 
              badge-success 
              <% } else if (product.paymentStatus === 'Pending') { %> 
              badge-warning 
              <% } else { %>
              badge-danger
              <% } %>">
              <%= product.paymentStatus %>
            </span>
          </div>
          <% if (product.status === 'Delivered') { %>
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#returnModal">Return</button>
          <% } else if (product.status === 'Pending') { %>
            <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#cancelModal<%= product._id %>">Cancel</button>
          <% } %>
        </div>
        <div class="mt-3">
          <a href="/download-invoice/<%= product._id %>" class="btn btn-dark">Invoice Download</a>
        </div>
      </div>
    </div>
  </div>

  <!-- Cancel Modal -->
  <% if (product.status === 'Pending') { %>
    <div class="modal fade" id="cancelModal<%= product._id %>" tabindex="-1" aria-labelledby="cancelModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="cancelModalLabel">Cancel Order</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <form id="cancelForm<%= product._id %>">
            <div class="modal-body">
              <div class="mb-3">
                <label for="cancelReason" class="form-label">Reason for Cancellation</label>
                <textarea id="cancelReason<%= product._id %>" name="cancelReason" rows="5" cols="40" class="form-control" required></textarea>
              </div>
            </div>
            <div class="modal-footer">
              <button type="submit" class="btn btn-danger">Submit Cancellation</button>
            </div>
          </form>
        </div>
      </div>
    </div>

    <script>
      // Function to handle cancellation
      async function handleCancelOrder(productId, quantity) {
        let reason = document.getElementById('cancelReason<%= product._id %>').value;

        try {
          let response = await fetch(`/cancelOrder/${productId}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ returnReason: reason, quantity })
          });

          if (response.ok) {
            Swal.fire({
              icon: 'success',
              title: 'Success!',
              text: 'Your cancellation request has been submitted.',
              confirmButtonText: 'OK'
            }).then(() => {
              window.location.reload();
            });
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Oops...',
              text: 'Something went wrong!',
              confirmButtonText: 'OK'
            });
          }
        } catch (error) {
          console.error('Error:', error);
          Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Network error or request failed.',
            confirmButtonText: 'OK'
          });
        }
      }

      // Event listener for the cancellation form
      document.getElementById('cancelForm<%= product._id %>').addEventListener('submit', function(event) {
        event.preventDefault(); // Prevent the form from submitting the traditional way

        let quantity = <%= product.quantity %>; // Get the product quantity
        let productId = '<%= product._id %>'; // Get the product ID from your template (EJS)

        handleCancelOrder(productId, quantity); // Call the cancellation function
      });
    </script>
  <% } %>
<% }) %>

 